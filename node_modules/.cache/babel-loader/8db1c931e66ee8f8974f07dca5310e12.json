{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\react\\\\src\\\\components\\\\sub\\\\Community.js\",\n    _s = $RefreshSig$();\n\nimport Layout from '../common/Layout';\nimport { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Community() {\n  _s();\n\n  const dummyPosts = [{\n    title: '1',\n    content: 'a'\n  }, {\n    title: '2',\n    content: 'b'\n  }, {\n    title: '3',\n    content: 'c'\n  }, {\n    title: '4',\n    content: 'd'\n  }, {\n    title: '5',\n    content: 'e'\n  }];\n  const input = useRef(null);\n  const textarea = useRef(null);\n  const inputEdit = useRef(null);\n  const textareaEdit = useRef(null);\n  const [Posts, setPosts] = useState(dummyPosts); //수정모드가 열렸을 때 다른 수정 버튼을 누르더라도 수정이 되지 않도록 해야 하는데\n  //이렇게 하려며 allowed라는 어떤 state를 하나 만들어서\n  //그 값이 true일 때만 이 edit를 눌렀을 때 열리도록\n  //어떤 state값을 추가로 하나 만들어서\n  //내가 만약 edit을 눌러서 현재 수정 모드로 바뀌어 있으면\n  //그 state 값을 false, true 이렇게 지정을 해서 그 값이 true일 때만 edit 이벤트가 발생하도록 만들어 보자\n\n  const [Allowed, setAllowed] = useState(true);\n\n  const resetForm = () => {\n    input.current.value = '';\n    textarea.current.value = '';\n    inputEdit.current.value = '';\n    textareaEdit.current.value = '';\n  };\n\n  const createPost = () => {\n    if (!input.current.value.trim() || !textarea.current.value.trim()) {\n      resetForm();\n      return alert('제목과 본문을 모두 입력하세요');\n    }\n\n    setPosts([...Posts, {\n      title: input.current.value,\n      content: textarea.current.value\n    }]);\n    resetForm();\n  };\n\n  const deletePost = index => {\n    console.log(index);\n    setPosts(Posts.filter((post, idx) => idx !== index));\n  };\n\n  const enableUpdate = index => {\n    //enableUpdate가 동작이 될 때 우리는 기존에 setPosts로 무조건 수정되게 했었는데\n    //Allowed가 true일 때만 동작이 되어야 되니까\n    //만약 Allowed가 만약 true가 아니면 return으로 끊어버리면서\n    //이 setPosts가 동작이 안 되게 처리해 보자\n    if (!Allowed) return; //만약 이게 true면 무시가 될 텐데 무시가 되면서\n    //setPosts가 실행이 될 것\n    //setPosts가 실행이되고 setPosts가 실행이 되기 직전에\n    //Allowed값을 false로 변경해야 함\n\n    setAllowed(false); //setAllowed값이 true가 되어야 다시 수정이 되는 거니까\n    //수정이 되려면 disableUpdate를 눌러서 cancel을 시키거나해야 되기 때문에\n\n    setPosts(Posts.map((post, idx) => {\n      if (idx === index) post.enableUpdate = true;\n      return post;\n    }));\n  };\n\n  const disableUpdate = index => {\n    setAllowed(true); //이 disableUpdate가 실행이 되는 순간 setAllowed값을 true로 변경해서 다시 글 수정이 되도록 변경\n\n    setPosts(Posts.map((post, idx) => {\n      if (idx === index) post.enableUpdate = false;\n      return post;\n    }));\n  };\n\n  const updatePost = index => {\n    if (!inputEdit.current.value.trim() || !textareaEdit.current.value.trim()) {\n      resetForm();\n      return alert('수정할 제목과 본문을 모두 입력하세요');\n    }\n\n    setPosts(Posts.map((post, idx) => {\n      if (idx === index) {\n        post.title = inputEdit.current.value;\n        post.content = textareaEdit.current.value;\n        post.enableUpdate = false;\n      }\n\n      return post;\n    }));\n  }; //수정모드가 열렸을 때 다른 수정 버튼을 누르더라도 수정이 되지 않도록 해야 하는데\n  //이렇게 하려며 allowed라는 어떤 state를 하나 만들어서\n  //그 값이 true일 때만 이 edit를 눌렀을 때 열리도록\n  //어떤 state값을 추가로 하나 만들어서\n  //내가 만약 edit을 눌러서 현재 수정 모드로 바뀌어 있으면\n  //그 state 값을 false, true 이렇게 지정을 해서 그 값이 true일 때만 edit 이벤트가 발생하도록 만들어 보자\n\n\n  useEffect(() => {\n    console.log(Posts);\n  }, [Posts]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    name: 'Community',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        ref: input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        cols: \"30\",\n        rows: \"5\",\n        placeholder: \"\\uBCF8\\uBB38\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694 \",\n        ref: textarea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetForm,\n        children: \"CANCEL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createPost,\n        children: \"WRITE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showBox\",\n      children: Posts.map((post, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          children: post.enableUpdate ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editTxt\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: post.title,\n                ref: inputEdit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                cols: \"30\",\n                rows: \"4\",\n                defaultValue: post.content,\n                ref: textareaEdit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btnSet\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => disableUpdate(idx),\n                children: \"CANCEL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => updatePost(idx),\n                children: \"UPDATE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"txt\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btnSet\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => enableUpdate(idx),\n                children: \"EDIT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deletePost(idx),\n                children: \"DELELTE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Community, \"ynEydPCQFPzDiVb9NsCC9keZy6A=\");\n\n_c = Community;\nexport default Community;\n\nvar _c;\n\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"names":["Layout","useRef","useEffect","useState","Community","dummyPosts","title","content","input","textarea","inputEdit","textareaEdit","Posts","setPosts","Allowed","setAllowed","resetForm","current","value","createPost","trim","alert","deletePost","index","console","log","filter","post","idx","enableUpdate","map","disableUpdate","updatePost"],"sources":["C:/Users/pc/Desktop/react/src/components/sub/Community.js"],"sourcesContent":["import Layout from '../common/Layout';\r\nimport { useRef, useEffect, useState } from 'react';\r\n\r\nfunction Community() {\r\n\tconst dummyPosts = [\r\n\t\t{ title: '1', content: 'a' },\r\n\t\t{ title: '2', content: 'b' },\r\n\t\t{ title: '3', content: 'c' },\r\n\t\t{ title: '4', content: 'd' },\r\n\t\t{ title: '5', content: 'e' },\r\n\t];\r\n\r\n\tconst input = useRef(null);\r\n\tconst textarea = useRef(null);\r\n\tconst inputEdit = useRef(null);\r\n\tconst textareaEdit = useRef(null);\r\n\r\n\tconst [Posts, setPosts] = useState(dummyPosts);\r\n\t//수정모드가 열렸을 때 다른 수정 버튼을 누르더라도 수정이 되지 않도록 해야 하는데\r\n\t//이렇게 하려며 allowed라는 어떤 state를 하나 만들어서\r\n\t//그 값이 true일 때만 이 edit를 눌렀을 때 열리도록\r\n\t//어떤 state값을 추가로 하나 만들어서\r\n\t//내가 만약 edit을 눌러서 현재 수정 모드로 바뀌어 있으면\r\n\t//그 state 값을 false, true 이렇게 지정을 해서 그 값이 true일 때만 edit 이벤트가 발생하도록 만들어 보자\r\n\tconst [Allowed, setAllowed] = useState(true);\r\n\r\n\tconst resetForm = () => {\r\n\t\tinput.current.value = '';\r\n\t\ttextarea.current.value = '';\r\n\t\tinputEdit.current.value = '';\r\n\t\ttextareaEdit.current.value = '';\r\n\t};\r\n\r\n\tconst createPost = () => {\r\n\t\tif (!input.current.value.trim() || !textarea.current.value.trim()) {\r\n\t\t\tresetForm();\r\n\t\t\treturn alert('제목과 본문을 모두 입력하세요');\r\n\t\t}\r\n\t\tsetPosts([\r\n\t\t\t...Posts,\r\n\t\t\t{ title: input.current.value, content: textarea.current.value },\r\n\t\t]);\r\n\t\tresetForm();\r\n\t};\r\n\r\n\tconst deletePost = (index) => {\r\n\t\tconsole.log(index);\r\n\r\n\t\tsetPosts(Posts.filter((post, idx) => idx !== index));\r\n\t};\r\n\r\n\tconst enableUpdate = (index) => {\r\n\t\t//enableUpdate가 동작이 될 때 우리는 기존에 setPosts로 무조건 수정되게 했었는데\r\n\t\t//Allowed가 true일 때만 동작이 되어야 되니까\r\n\t\t//만약 Allowed가 만약 true가 아니면 return으로 끊어버리면서\r\n\t\t//이 setPosts가 동작이 안 되게 처리해 보자\r\n\t\tif (!Allowed) return;\r\n\r\n\t\t//만약 이게 true면 무시가 될 텐데 무시가 되면서\r\n\t\t//setPosts가 실행이 될 것\r\n\t\t//setPosts가 실행이되고 setPosts가 실행이 되기 직전에\r\n\t\t//Allowed값을 false로 변경해야 함\r\n\t\tsetAllowed(false);\r\n\t\t//setAllowed값이 true가 되어야 다시 수정이 되는 거니까\r\n\t\t//수정이 되려면 disableUpdate를 눌러서 cancel을 시키거나해야 되기 때문에\r\n\t\tsetPosts(\r\n\t\t\tPosts.map((post, idx) => {\r\n\t\t\t\tif (idx === index) post.enableUpdate = true;\r\n\t\t\t\treturn post;\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst disableUpdate = (index) => {\r\n\t\tsetAllowed(true);\r\n\t\t//이 disableUpdate가 실행이 되는 순간 setAllowed값을 true로 변경해서 다시 글 수정이 되도록 변경\r\n\t\tsetPosts(\r\n\t\t\tPosts.map((post, idx) => {\r\n\t\t\t\tif (idx === index) post.enableUpdate = false;\r\n\t\t\t\treturn post;\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst updatePost = (index) => {\r\n\t\tif (!inputEdit.current.value.trim() || !textareaEdit.current.value.trim()) {\r\n\t\t\tresetForm();\r\n\t\t\treturn alert('수정할 제목과 본문을 모두 입력하세요');\r\n\t\t}\r\n\r\n\t\tsetPosts(\r\n\t\t\tPosts.map((post, idx) => {\r\n\t\t\t\tif (idx === index) {\r\n\t\t\t\t\tpost.title = inputEdit.current.value;\r\n\t\t\t\t\tpost.content = textareaEdit.current.value;\r\n\t\t\t\t\tpost.enableUpdate = false;\r\n\t\t\t\t}\r\n\t\t\t\treturn post;\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\t//수정모드가 열렸을 때 다른 수정 버튼을 누르더라도 수정이 되지 않도록 해야 하는데\r\n\t//이렇게 하려며 allowed라는 어떤 state를 하나 만들어서\r\n\t//그 값이 true일 때만 이 edit를 눌렀을 때 열리도록\r\n\t//어떤 state값을 추가로 하나 만들어서\r\n\t//내가 만약 edit을 눌러서 현재 수정 모드로 바뀌어 있으면\r\n\t//그 state 값을 false, true 이렇게 지정을 해서 그 값이 true일 때만 edit 이벤트가 발생하도록 만들어 보자\r\n\tuseEffect(() => {\r\n\t\tconsole.log(Posts);\r\n\t}, [Posts]);\r\n\r\n\treturn (\r\n\t\t<Layout name={'Community'}>\r\n\t\t\t<div className='inputBox'>\r\n\t\t\t\t<input type='text' placeholder='제목을 입력하세요' ref={input} />\r\n\t\t\t\t<br />\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tcols='30'\r\n\t\t\t\t\trows='5'\r\n\t\t\t\t\tplaceholder='본문을 입력하세요 '\r\n\t\t\t\t\tref={textarea}></textarea>\r\n\t\t\t\t<br />\r\n\r\n\t\t\t\t<button onClick={resetForm}>CANCEL</button>\r\n\t\t\t\t<button onClick={createPost}>WRITE</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='showBox'>\r\n\t\t\t\t{Posts.map((post, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<article key={idx}>\r\n\t\t\t\t\t\t\t{post.enableUpdate ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<div className='editTxt'>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue={post.title}\r\n\t\t\t\t\t\t\t\t\t\t\tref={inputEdit}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\t\t\t\tcols='30'\r\n\t\t\t\t\t\t\t\t\t\t\trows='4'\r\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue={post.content}\r\n\t\t\t\t\t\t\t\t\t\t\tref={textareaEdit}></textarea>\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='btnSet'>\r\n\t\t\t\t\t\t\t\t\t\t<button onClick={() => disableUpdate(idx)}>CANCEL</button>\r\n\t\t\t\t\t\t\t\t\t\t<button onClick={() => updatePost(idx)}>UPDATE</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<div className='txt'>\r\n\t\t\t\t\t\t\t\t\t\t<h2>{post.title}</h2>\r\n\t\t\t\t\t\t\t\t\t\t<p>{post.content}</p>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='btnSet'>\r\n\t\t\t\t\t\t\t\t\t\t<button onClick={() => enableUpdate(idx)}>EDIT</button>\r\n\t\t\t\t\t\t\t\t\t\t<button onClick={() => deletePost(idx)}>DELELTE</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</article>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</Layout>\r\n\t);\r\n}\r\n\r\nexport default Community;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}