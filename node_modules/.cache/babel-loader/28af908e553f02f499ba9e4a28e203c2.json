{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\react\\\\src\\\\components\\\\sub\\\\Members.js\",\n    _s = $RefreshSig$();\n\nimport Layout from '../common/Layout';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Member() {\n  _s();\n\n  const path = process.env.PUBLIC_URL;\n  const [Members, setMembers] = useState([]);\n  useEffect(() => {\n    axios.get(`${path}/DB/members.json`).then(json => {\n      setMembers(json.data.members); //data를 받아서 console만 찍으면 의미가 없고 이 데이터를 어딘가에 담아서 담겨있는 값에 따라서 화면에 랜더링이 바뀌도록 처리해야 되기 때문에\n      //화면에 랜더링을 관장하는 중요한 정보값은 state로 담으면 됨\n      //여기까지 하면 Members라는 state 값에 이 data가 확인될 것\n      //초기값에는 Members안에 빈 배열값이 들어가 있으니까\n      //이 Members에 데이터가 담기는 순간에 Members state 값이 값을잘 품고 있는지 확인해 보자\n    });\n  }, []);\n  useEffect(() => {\n    console.log(Members);\n  }, [Members]); //이렇게 하면 빈 배열이 먼저 받아진 다음에 데이터가 받아지는 걸 확인해 볼 수 있음\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    name: 'Members',\n    children: Members.map((member, idx) => {\n      return (\n        /*#__PURE__*/\n        // 반복되는 요소를 article로 지정했기 때문에 article 안에 key값을 집어넣어야 됨\n        _jsxDEV(\"article\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pic\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `${path}/img/${member.pic}`,\n                alt: member.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 7\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 6\n        }, this)\n      );\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Member, \"tFWMWr6SzVjB5P4XzE3zKtUU54g=\");\n\n_c = Member;\nexport default Member;\n\nvar _c;\n\n$RefreshReg$(_c, \"Member\");","map":{"version":3,"names":["Layout","axios","useEffect","useState","Member","path","process","env","PUBLIC_URL","Members","setMembers","get","then","json","data","members","console","log","map","member","idx","pic","name"],"sources":["C:/Users/pc/Desktop/react/src/components/sub/Members.js"],"sourcesContent":["import Layout from '../common/Layout';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction Member() {\r\n\tconst path = process.env.PUBLIC_URL;\r\n\tconst [Members, setMembers] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\taxios.get(`${path}/DB/members.json`).then((json) => {\r\n\t\t\tsetMembers(json.data.members);\r\n\t\t\t//data를 받아서 console만 찍으면 의미가 없고 이 데이터를 어딘가에 담아서 담겨있는 값에 따라서 화면에 랜더링이 바뀌도록 처리해야 되기 때문에\r\n\t\t\t//화면에 랜더링을 관장하는 중요한 정보값은 state로 담으면 됨\r\n\t\t\t//여기까지 하면 Members라는 state 값에 이 data가 확인될 것\r\n\t\t\t//초기값에는 Members안에 빈 배열값이 들어가 있으니까\r\n\t\t\t//이 Members에 데이터가 담기는 순간에 Members state 값이 값을잘 품고 있는지 확인해 보자\r\n\t\t});\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(Members);\r\n\t}, [Members]);\r\n\t//이렇게 하면 빈 배열이 먼저 받아진 다음에 데이터가 받아지는 걸 확인해 볼 수 있음\r\n\treturn (\r\n\t\t<Layout name={'Members'}>\r\n\t\t\t{/* Members라는 state값을 map으로 반복을 돌면서 콜백함수를 집어넣어 주고 반복을 도는 데이터를 member로 받고 순서값을 idx로 받음 */}\r\n\t\t\t{Members.map((member, idx) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t// 반복되는 요소를 article로 지정했기 때문에 article 안에 key값을 집어넣어야 됨\r\n\t\t\t\t\t<article key={idx}>\r\n\t\t\t\t\t\t<div className='inner'>\r\n\t\t\t\t\t\t\t<div className='pic'>\r\n\t\t\t\t\t\t\t\t{/* 퍼블릭 폴더에 이미지 폴더에서 파일을 가져와야 되기 때문에 `${path}`로 해당 퍼블릭 폴더까지의 경로를 구한 다음에*/}\r\n\t\t\t\t\t\t\t\t<img src={`${path}/img/${member.pic}`} alt={member.name} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</article>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</Layout>\r\n\t);\r\n}\r\n\r\nexport default Member;\r\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EACjB,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAAzB;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACfD,KAAK,CAACU,GAAN,CAAW,GAAEN,IAAK,kBAAlB,EAAqCO,IAArC,CAA2CC,IAAD,IAAU;MACnDH,UAAU,CAACG,IAAI,CAACC,IAAL,CAAUC,OAAX,CAAV,CADmD,CAEnD;MACA;MACA;MACA;MACA;IACA,CAPD;EAQA,CATQ,EASN,EATM,CAAT;EAWAb,SAAS,CAAC,MAAM;IACfc,OAAO,CAACC,GAAR,CAAYR,OAAZ;EACA,CAFQ,EAEN,CAACA,OAAD,CAFM,CAAT,CAfiB,CAkBjB;;EACA,oBACC,QAAC,MAAD;IAAQ,IAAI,EAAE,SAAd;IAAA,UAEEA,OAAO,CAACS,GAAR,CAAY,CAACC,MAAD,EAASC,GAAT,KAAiB;MAC7B;QAAA;QACC;QACA;UAAA,uBACC;YAAK,SAAS,EAAC,OAAf;YAAA,uBACC;cAAK,SAAS,EAAC,KAAf;cAAA,uBAEC;gBAAK,GAAG,EAAG,GAAEf,IAAK,QAAOc,MAAM,CAACE,GAAI,EAApC;gBAAuC,GAAG,EAAEF,MAAM,CAACG;cAAnD;gBAAA;gBAAA;gBAAA;cAAA;YAFD;cAAA;cAAA;cAAA;YAAA;UADD;YAAA;YAAA;YAAA;UAAA;QADD,GAAcF,GAAd;UAAA;UAAA;UAAA;QAAA;MAFD;IAWA,CAZA;EAFF;IAAA;IAAA;IAAA;EAAA,QADD;AAkBA;;GArCQhB,M;;KAAAA,M;AAuCT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}